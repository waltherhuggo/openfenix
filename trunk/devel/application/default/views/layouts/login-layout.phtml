<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
	<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title><?php echo $this->escape($this->pageTitle); ?></title>
	<link rel="stylesheet" type="text/css" href="<?php echo $this->baseUrl(); ?>/scripts/extjs/resources/css/ext-all.css" />
	<link rel="stylesheet" type="text/css" href="<?php echo $this->baseUrl(); ?>/scripts/extjs/resources/css/xtheme-olive.css" />
	<style>
	#login-logo .x-plain-body {
        background:url(<?php echo $this->baseUrl(); ?>/images/openfenix2.png) no-repeat center center;
	}
	</style>
	<script type="text/javascript" src="<?php echo $this->baseUrl(); ?>/scripts/extjs/adapter/ext/ext-base.js"></script>
	<script type="text/javascript" src="<?php echo $this->baseUrl(); ?>/scripts/extjs/ext-all.js"></script>
	<script type="text/javascript">
	Ext.SSL_SECURE_URL="<?php echo $this->baseUrl; ?>/scripts/ext/resources/images/default/s.gif";
	Ext.BLANK_IMAGE_URL="<?php echo $this->baseUrl; ?>/scripts/ext/resources/images/default/s.gif";
	Ext.onReady(function(){
	    Ext.QuickTips.init();
	 
		// Create a variable to hold our EXT Form Panel. 
		// Assign various config options as seen.
		var logoPanel = new Ext.Panel({
			baseCls: 'x-plain',
			id: 'login-logo',
			region: 'center',
			height: 250,
		});
			 
	    var login = new Ext.FormPanel({ 
	        labelWidth:80,
	        url:'dologin',
	        baseParams: {module: 'loginOF'}, 
	        frame:true, 
	        title:'Ingreso de Usuarios', 
	        width:230, 
	        padding:200, 
	        defaultType:'textfield',
			monitorValid:true,
	 
			// Specific attributes for the text fields for username / password. 
			// The "name" attribute defines the name of variables sent to the server.
	        items:[logoPanel,{ 
	                fieldLabel:'Usuario', 
	                name:'loginUsername', 
	                allowBlank:false 
	            },{ 
	                fieldLabel:'Clave', 
	                name:'loginPassword', 
	                inputType:'password', 
	                allowBlank:false 
	            }],
	 
		// All the magic happens after the user clicks the button     
	        buttons:[{ 
	                text:'Login',
	                formBind: true,	 
	                // Function that fires when user clicks the button 
	                handler:function(){ 
	                    login.getForm().submit({ 
	                        method:'POST', 
	                        waitTitle:'Conectando', 
	                        waitMsg:'Sincronizando Aplicacion...',
	 
				// Functions that fire (success or failure) when the server responds. 
				// The one that executes is determined by the 
				// response that comes from login.asp as seen below. The server would 
				// actually respond with valid JSON, 
				// something like: response.write "{ success: true}" or 
				// response.write "{ success: false, errors: { reason: 'Login failed. Try again.' }}" 
				// depending on the logic contained within your server script.
				// If a success occurs, the user is notified with an alert messagebox, 
				// and when they click "OK", they are redirected to whatever page
				// you define as redirect. 
	 
	                        success:function(){ 
	                        	Ext.Msg.alert('Status', 'Login Successful!', function(btn, text){
					   if (btn == 'ok'){
			                        var redirect = '	index'; 
			                        window.location = redirect;
	                                   }
				        });
	                        },
	 
				// Failure function, see comment above re: success and failure. 
				// You can see here, if login fails, it throws a messagebox
				// at the user telling him / her as much.  
	 
	                        failure:function(form, action){ 
	                            if(action.failureType == 'server'){ 
	                                obj = Ext.util.JSON.decode(action.response.responseText); 
	                                Ext.Msg.alert('Login Failed!', obj.errors.reason); 
	                            }else{ 
	                                Ext.Msg.alert('Warning!', 'Authentication server is unreachable : ' + action.response.responseText + "abcd"); 
	                            } 
	                            login.getForm().reset(); 
	                        } 
	                    }); 
	                } 
	            }] 
	    });
	 
	 
		// This just creates a window to wrap the login form. 
		// The login object is passed to the items collection.       
	    var win = new Ext.Window({
	        layout:'fit',
	        width:300,
	        height:380,
	        closable: false,
	        resizable: true,
	        plain: false,
	        //items: [logoPanel,login]
	        items: [login]
		});
		win.show();
	});
	</script>	
	</head>
	<body></body>
</html>